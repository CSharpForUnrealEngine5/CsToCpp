#pragma warning disable CS8618,CS8603
namespace GameFramework;
using CSharpToCpp.Utilities;
[CppInclude("Engine/RendererSettings.h")]
///<summary>Rendering settings.</summary>
public partial class URendererSettings : UDeveloperSettings {
// RendererSettings
	public byte MobileShadingPath;
	public bool bMobileSupportGPUScene;
	public byte MobileAntiAliasing;
	public byte MobileFloatPrecisionMode;
	public bool bMobileAllowDitheredLODTransition;
	public bool bMobileVirtualTextures;
	public bool bDiscardUnusedQualityLevels;
	public byte ShaderCompressionFormat;
	public bool bOcclusionCulling;
	public float MinScreenRadiusForLights;
	public float MinScreenRadiusForEarlyZPass;
	public float MinScreenRadiusForCSMdepth;
	public bool bPrecomputedVisibilityWarning;
	public bool bTextureStreaming;
	public bool bUseDXT5NormalMaps;
	public bool bVirtualTextures;
	public bool bVirtualTextureEnableAutoImport;
	public bool bVirtualTexturedLightmaps;
	public bool bVirtualTextureAnisotropicFiltering;
	public bool bEnableVirtualTextureOpacityMask;
	public uint VirtualTextureTileSize;
	public uint VirtualTextureTileBorderSize;
	public uint VirtualTextureFeedbackFactor;
	public byte WorkingColorSpaceChoice;
	public FVector2D RedChromaticityCoordinate;
	public FVector2D GreenChromaticityCoordinate;
	public FVector2D BlueChromaticityCoordinate;
	public FVector2D WhiteChromaticityCoordinate;
	public bool bClearCoatEnableSecondNormal;
	public byte DynamicGlobalIllumination;
	public byte Reflections;
	public int ReflectionCaptureResolution;
	public bool ReflectionEnvironmentLightmapMixBasedOnRoughness;
	public bool bUseHardwareRayTracingForLumen;
	public ELumenRayLightingMode LumenRayLightingMode;
	public bool LumenFrontLayerTranslucencyReflections;
	public byte LumenSoftwareTracingMode;
	public byte ShadowMapMethod;
	public bool bEnableRayTracing;
	public bool bEnableRayTracingShadows;
	public bool bEnableRayTracingSkylight;
	public bool bEnableRayTracingTextureLOD;
	public bool bEnablePathTracing;
	public bool bGenerateMeshDistanceFields;
	public float DistanceFieldVoxelDensity;
	public bool bNanite;
	public bool bAllowStaticLighting;
	public bool bUseNormalMapsForStaticLighting;
	public bool bForwardShading;
	public bool bVertexFoggingForOpaque;
	public bool bSeparateTranslucency;
	public byte TranslucentSortPolicy;
	public FVector TranslucentSortAxis;
	public byte HMDFixedFoveationLevel;
	public bool bHMDFixedFoveationDynamic;
	public byte CustomDepthStencil;
	public bool bCustomDepthTaaJitter;
	public byte bEnableAlphaChannelInPostProcessing;
	public bool bDefaultFeatureBloom;
	public bool bDefaultFeatureAmbientOcclusion;
	public bool bDefaultFeatureAmbientOcclusionStaticFraction;
	public bool bDefaultFeatureAutoExposure;
	public byte DefaultFeatureAutoExposure;
	public float DefaultFeatureAutoExposureBias;
	public bool bExtendDefaultLuminanceRangeInAutoExposureSettings;
	public bool bDefaultFeatureMotionBlur;
	public bool bDefaultFeatureLensFlare;
	public bool bTemporalUpsampling;
	public byte DefaultFeatureAntiAliasing;
	public byte MSAASampleCount;
	public ELightUnits DefaultLightUnits;
	public byte DefaultBackBufferPixelFormat;
	public bool bRenderUnbuiltPreviewShadowsInGame;
	public bool bStencilForLODDither;
	public byte EarlyZPass;
	public bool bEarlyZPassOnlyMaterialMasking;
	public bool bEnableCSMCaching;
	public bool bDBuffer;
	public byte ClearSceneMethod;
	public byte VelocityPass;
	public byte VertexDeformationOutputsVelocity;
	public bool bSelectiveBasePassOutputs;
	public bool bDefaultParticleCutouts;
	public int GPUSimulationTextureSizeX;
	public int GPUSimulationTextureSizeY;
	public bool bGlobalClipPlane;
	public byte GBufferFormat;
	public bool bUseGPUMorphTargets;
	public bool bNvidiaAftermathEnabled;
	public bool bMultiView;
	public bool bMobilePostProcessing;
	public bool bMobileMultiView;
	public bool bMobileUseHWsRGBEncoding;
	public bool bRoundRobinOcclusion;
	public bool bMeshStreaming;
	public bool bEnableHeterogeneousVolumes;
	public float WireframeCullThreshold;
	public bool bSupportStationarySkylight;
	public bool bSupportLowQualityLightmaps;
	public bool bSupportPointLightWholeSceneShadows;
	public bool bSupportSkyAtmosphere;
	public bool bSupportSkyAtmosphereAffectsHeightFog;
	public bool bSupportCloudShadowOnForwardLitTranslucent;
	public bool bSupportTranslucentPerObjectShadow;
	public bool bSupportCloudShadowOnSingleLayerWater;
	public bool bEnableStrata;
	public bool StrataOpaqueMaterialRoughRefraction;
	public bool StrataDebugAdvancedVisualizationShaders;
	public bool bMaterialRoughDiffuse;
	public bool bMaterialEnergyConservation;
	public bool bOrderedIndependentTransparencyEnable;
	public bool bSupportSkinCacheShaders;
	public bool bSkipCompilingGPUSkinVF;
	public ESkinCacheDefaultBehavior DefaultSkinCacheBehavior;
	public float SkinCacheSceneMemoryLimitInMB;
	public bool bMobileEnableStaticAndCSMShadowReceivers;
	public bool bMobileEnableMovableLightCSMShaderCulling;
	public bool bMobileForwardEnableLocalLights;
	public bool bMobileForwardEnableClusteredReflections;
	public bool bMobileEnableNoPrecomputedLightingCSMShader;
	public bool bMobileAllowDistanceFieldShadows;
	public bool bMobileAllowMovableDirectionalLights;
	public bool bMobileAllowMovableSpotlightShadows;
	public bool bSupport16BitBoneIndex;
	public bool bGPUSkinLimit2BoneInfluences;
	public bool bSupportDepthOnlyIndexBuffers;
	public bool bSupportReversedIndexBuffers;
	public bool bMobileAmbientOcclusion;
	public bool bUseUnlimitedBoneInfluences;
	public int UnlimitedBonInfluencesThreshold;
	public FPerPlatformInt DefaultBoneInfluenceLimit;
	public FPerPlatformInt MaxSkinBones;
	public byte MobilePlanarReflectionMode;
	public bool bMobileSupportsGen4TAA;
	public FPerPlatformBool bStreamSkeletalMeshLODs;
	public FPerPlatformBool bDiscardSkeletalMeshOptionalLODs;
	public FSoftObjectPath VisualizeCalibrationColorMaterialPath;
	public FSoftObjectPath VisualizeCalibrationCustomMaterialPath;
	public FSoftObjectPath VisualizeCalibrationGrayscaleMaterialPath;
}
