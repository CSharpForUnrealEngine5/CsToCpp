#pragma warning disable CS8618,CS8603,CS1587,CS1591
namespace GameFramework;
using CSharpToCpp.Utilities;
[CppInclude("MuCO/CustomizableObjectSystem.h")]
public partial class UCustomizableObjectSystem : UObject {
	///<summary>Get the singleton object. It will be created if it doesn&#39;t exist yet.</summary>
	public static UCustomizableObjectSystem GetInstance() { return default; }
	///<summary>PendingReleaseSkeletalMesh</summary>
	public TArray<FPendingReleaseSkeletalMeshInfo> PendingReleaseSkeletalMesh;
	///<summary>Mutable default image provider. Used by the COIEditor and Instance/Descriptor APIs.</summary>
	public UDefaultImageProvider DefaultImageProvider;
	///<summary>Find out the version of the plugin</summary>
	public  string GetPluginVersion() { return default; }
	///<summary>Get the number of instances built and alive.</summary>
	public  int GetNumInstances() { return default; }
	///<summary>Get the number of instances waiting to be updated.</summary>
	public  int GetNumPendingInstances() { return default; }
	///<summary>Get the total number of instances includingbuilt and not built.</summary>
	public  int GetTotalInstances() { return default; }
	///<summary>Get the amount of memory in use for textures generated by mutable.</summary>
	public  int GetTextureMemoryUsed() { return default; }
	///<summary>Return the average build/update time of an instance in ms.</summary>
	public  int GetAverageBuildTime() { return default; }
	///<summary>If set to true, Mutable will release Mutable-generated textures immediately when they are no longer used without waiting for GC</summary>
	public  void SetReleaseMutableTexturesImmediately(bool bReleaseTextures) {}
	///<summary>DefaultInstanceLODManagement</summary>
	public UCustomizableInstanceLODManagementBase DefaultInstanceLODManagement;
	///<summary>CurrentInstanceLODManagement</summary>
	public UCustomizableInstanceLODManagementBase CurrentInstanceLODManagement;
	///<summary>Array where textures are added temporarily while the mutable thread may want to</summary>
	public TArray<UTexture2D> ProtectedCachedTextures;
}
